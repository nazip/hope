div class = "question-#{question.id}"
  = label_tag question.title, nil, class: 'text-info'
  br
  p= question.body
  - if user_signed_in? and question.user_id == current_user.id
    = link_to 'Удалить вопрос', question_path(question), :method => :delete
    br
    = link_to 'Редактировать вопрос', '', class: 'edit-question-link', data: { question_id: question.id }
    br
    = form_for [question], remote: true, html: { id: "edit-question-#{question.id}" } do |f|
      = f.text_area :body
      = f.submit 'Сохранить'
  - if !question.attachments.empty?
    p Attachments:
    ul
      - question.attachments.each do |a|
        div class = "attachment-#{a.id}"
          li= link_to a.file.identifier, a.file.url
          - if user_signed_in? and question.user_id == current_user.id
            ul
              li= link_to "delete #{a.file.identifier}", question_attachment_path(question, a), method: :delete, remote: true
  - if user_signed_in? and question.user_id != current_user.id
    div class = "links-Question-#{question.id}"
      - if current_user.elect_for?(question, -1)
        = link_to 'like', question_elects_path(question_id: question, like: 1), method: :post, remote: true, data: {type: :json}, class: 'like'
        br
      - if current_user.elect_for?(question, 1)
        = link_to 'dislike', question_elects_path(question_id: question, like: -1), method: :post, remote: true, data: {type: :json}, class: 'like'
        br
      - if current_user.elect_for?(question)
        = link_to 'cancel', question_elect_path(question_id: question, id: question.elects_id(current_user.id) ), method: :delete, remote: true, data: {type: :json}, class: 'like'
        br
  div class = "Question-#{question.id}"
    = 'Рейтинг: '
    = question.sum_elects
  div class = "Question-error-#{question.id}"
  - if !question.answers.empty?
    h2= 'Ответы:'
    .answers
      = render question.answers
  - else
    p

